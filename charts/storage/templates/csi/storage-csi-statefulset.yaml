{{- if eq .Values.global.storageLocation "on-cluster" }}
{{- $clusterDomain := .Values.global.clusterDomain }}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: drycc-storage-csi-controller
spec:
  selector:
    matchLabels:
      component: drycc-storage
      app: drycc-storage-csi-controller
  serviceName: drycc-storage-csi-controller
  replicas: {{ .Values.csi.statefulset.replicas }}
  template:
    metadata:
      labels:
        component: drycc-storage
        app: drycc-storage-csi-controller
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.csi.statefulset.podAffinityPreset.type "component" "" "extraMatchLabels" .Values.csi.statefulset.podAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.csi.statefulset.podAntiAffinityPreset.type "component" "" "extraMatchLabels" .Values.csi.statefulset.podAntiAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.csi.statefulset.nodeAffinityPreset.type "key" .Values.csi.statefulset.nodeAffinityPreset.key "values" .Values.csi.statefulset.nodeAffinityPreset.values ) | nindent 10 }}
      priorityClassName: system-cluster-critical
      serviceAccountName: drycc-storage-csi
      initContainers:
      - name: drycc-storage-datanode-weed-init
        image: registry.drycc.cc/drycc/python-dev:latest
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args:
        - netcat
        - -v
        - -a
        - drycc-storage-metanode-weed.$(NAMESPACE).svc.{{ $clusterDomain }}:8888
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      containers:
      - name: drycc-storage-csi-controller-provisioner
        image: {{ .Values.csi.statefulset.provisionerImage }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args:
        - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
        - --leader-election
        - --leader-election-namespace={{ .Release.Namespace }}
        - --http-endpoint=:9809
        {{- end }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: 9809
          name: healthz
        {{- if not .Values.diagnosticMode.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz/leader-election
            port: healthz
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 60
        {{- end }}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: drycc-storage-csi-controller-attacher
        image: {{ .Values.csi.statefulset.attacherImage }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args:
        - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
        - --leader-election
        - --leader-election-namespace={{ .Release.Namespace }}
        - --http-endpoint=:9811
        {{- end }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: 9811
          name: healthz
        {{- if not .Values.diagnosticMode.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz/leader-election
            port: healthz
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 60
        {{- end }}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      # resizer
      - name: drycc-storage-csi-controller-resizer
        image: {{ .Values.csi.statefulset.resizerImage }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args:
        - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
        - --leader-election
        - --leader-election-namespace={{ .Release.Namespace }}
        - --http-endpoint=:9810
        {{- end }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: 9810
          name: healthz
        {{- if not .Values.diagnosticMode.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz/leader-election
            port: healthz
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 60
        {{- end }}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: drycc-storage-csi-controller-plugin
        image: {{ .Values.imageRegistry }}/{{ .Values.imageOrg }}/storage:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args:
        - controls
        - csi
        - --endpoint=unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - --filer=drycc-storage-metanode-weed.$(NAMESPACE).svc.{{ $clusterDomain }}:8888
        - --nodeid=$(NODE_NAME)
        - --driverName={{ .Values.csi.driverName }}
        - --components=controller
        - --attacher=true
        {{- end }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: storage-config
          mountPath: /etc/seaweedfs
      volumes:
      - name: socket-dir
        emptyDir: {}
      - name: storage-config
        configMap:
          name: storage-config
{{- end }}
