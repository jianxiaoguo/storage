{{- if eq .Values.global.storageLocation "on-cluster" }}
{{- $clusterDomain := .Values.global.clusterDomain }}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: drycc-storage-csi-controller
spec:
  selector:
    matchLabels:
      app: drycc-storage-csi-controller
  serviceName: drycc-storage-csi-controller
  replicas: {{ .Values.csi.statefulset.replicas }}
  template:
    metadata:
      labels:
        app: drycc-storage-csi-controller
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.csi.podAffinityPreset.type "component" "" "extraMatchLabels" .Values.csi.podAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.csi.podAntiAffinityPreset.type "component" "" "extraMatchLabels" .Values.csi.podAntiAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.csi.nodeAffinityPreset.type "key" .Values.csi.nodeAffinityPreset.key "values" .Values.csi.nodeAffinityPreset.values ) | nindent 10 }}
      priorityClassName: system-cluster-critical
      serviceAccountName: drycc-storage-csi
      containers:
        - name: drycc-storage-csi-controller-provisioner
          image: {{ .Values.csi.statefulset.provisionerImage }}
          args:
            - "--csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock"
            - -v
            - "9"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: drycc-storage-csi-controller-attacher
          image: {{ .Values.csi.statefulset.attacherImage }}
          args:
            - "--v=5"
            - "--csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock"
            - "--timeout=120s"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        # resizer
        - name: drycc-storage-csi-controller-resizer
          image: {{ .Values.csi.statefulset.resizerImage }}
          args:
            - "--v=5"
            - "--csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock"
            - "--leader-election=false"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: drycc-storage-csi-controller-plugin
          image: {{ .Values.imageRegistry }}/{{ .Values.imageOrg }}/storage:{{ .Values.imageTag }}
          imagePullPolicy: IfNotPresent
          args:
            - controls
            - csi
            - "--endpoint=unix:///var/lib/csi/sockets/pluginproxy/csi.sock"
            - "--filer=drycc-storage-metanode.$(NAMESPACE).svc.{{ $clusterDomain }}:18888"
            - "--nodeid=$(NODE_NAME)"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: "DRYCC_STORAGE_CA"
              value: /etc/drycc/storage/pki/ca.crt
            - name: "DRYCC_STORAGE_CERT"
              value: /etc/drycc/storage/pki/tls.crt
            - name: "DRYCC_STORAGE_KEY"
              value: /etc/drycc/storage/pki/tls.key
            - name: "DRYCC_STORAGE_JWT"
              valueFrom:
                secretKeyRef:
                  name: drycc-storage-creds
                  key: jwtkey
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: certs
              mountPath: /etc/drycc/storage/pki/
              readOnly: true
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: certs
          secret:
            secretName: drycc-storage-creds
{{- end }}
