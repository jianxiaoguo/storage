{{- if eq .Values.global.storageLocation "on-cluster" }}
{{- $clusterDomain := .Values.global.clusterDomain }}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: drycc-storage-csi-node
spec:
  selector:
    matchLabels:
      component: drycc-storage
      app: drycc-storage-csi-node
  {{- if .Values.csi.daemonset.updateStrategy }}
  updateStrategy: {{- toYaml .Values.csi.daemonset.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        component: drycc-storage
        app: drycc-storage-csi-node
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: drycc-storage-csi
      initContainers:
      - name: drycc-storage-datanode-weed-init
        image: registry.drycc.cc/drycc/python-dev:latest
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args:
        - netcat
        - -v
        - -a
        - drycc-storage-metanode-weed.$(NAMESPACE).svc.{{ $clusterDomain }}:8888
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      containers:
      - name:  drycc-storage-csi-node-registrar
        image:  {{ .Values.csi.daemonset.registrarImage }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args:
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/{{ .Values.csi.driverName }}/csi.sock
        - --http-endpoint=:9809
        {{- end }}
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 9809
          name: healthz
        {{- if not .Values.diagnosticMode.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 60
        {{- end }}
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi/
        - name: registration-dir
          mountPath: /registration/
      - name: drycc-storage-csi-node-plugin
        image: {{ .Values.imageRegistry }}/{{ .Values.imageOrg }}/storage:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args :
        - controls
        - csi
        - seaweedfs
        - --endpoint=unix:///csi/csi.sock
        - --seaweedfs-filer=drycc-storage-metanode-weed.$(NAMESPACE).svc.{{ $clusterDomain }}:8888
        - --node-id=$(NODE_NAME)
        - --driver-name={{ .Values.csi.driverName }}
        - --components=node
        - --savepoint-db=/csi/savepoint.db
        - --health-port=9808
        {{- end }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DATA_CENTER
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['topology.kubernetes.io/zone']
        ports:
        - containerPort: 9808
          name: healthz
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          failureThreshold: 2
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 60
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: plugins-dir
          mountPath: {{ .Values.csi.volumes.pluginsDir }}
          mountPropagation: "Bidirectional"
        - name: pods-mount-dir
          mountPath: {{ .Values.csi.volumes.podsMountDir }}
          mountPropagation: "Bidirectional"
        - name: device-dir
          mountPath: /dev
        - name: cache
          mountPath: /var/cache/seaweedfs
        - name: storage-config
          mountPath: /etc/seaweedfs
      volumes:
      - name: plugin-dir
        hostPath:
          path: {{ .Values.csi.volumes.pluginsDir }}/{{ .Values.csi.driverName }}
          type: DirectoryOrCreate
      - name: plugins-dir
        hostPath:
          path: {{ .Values.csi.volumes.pluginsDir }}
          type: Directory
      - name: pods-mount-dir
        hostPath:
          path: {{ .Values.csi.volumes.podsMountDir }}
          type: Directory
      - name: registration-dir
        hostPath:
          path: {{ .Values.csi.volumes.registrationDir }}
          type: DirectoryOrCreate
      - name: device-dir
        hostPath:
          path: /dev
      - name: cache
        emptyDir: {}
      - name: storage-config
        configMap:
          name: storage-config
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsUser: 0
{{- end }}
