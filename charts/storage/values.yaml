imageOrg: "drycc"
imagePullPolicy: "Always"
imageTag: "canary"
imageRegistry: "registry.drycc.cc"

# The following parameters are configured only when using an on-cluster storage instance
nodeAffinityPreset:
  key: "drycc.cc/node"
  type: "soft"
  values:
  - "true"

podAffinityPreset:
  key: "security"
  type: ""
  values:
  - "drycc-security"

# drycc storage csi driver
csi:
  nodeAffinityPreset:
    key: "drycc.cc/node"
    type: "soft"
    values:
    - "true"
  podAffinityPreset:
    type: ""
    extraMatchLabels:
      security: "drycc-security"
  podAntiAffinityPreset:
    type: "soft"
    extraMatchLabels:
      app: "drycc-storage-csi-controller"
  daemonset:
    registrarImage: registry.drycc.cc/k8s/sig-storage/csi-node-driver-registrar:v2.5.0
  statefulset:
    replicas: 1
    resizerImage: registry.drycc.cc/k8s/sig-storage/csi-resizer:v1.4.0
    attacherImage: registry.drycc.cc/k8s/sig-storage/csi-attacher:v3.4.0
    provisionerImage: registry.drycc.cc/k8s/sig-storage/csi-provisioner:v3.1.0

# mainnode seaweedfs master & pd
mainnode:
  replicas: 3
  nodeAffinityPreset:
    key: "drycc.cc/node"
    type: "soft"
    values:
    - "true"
  podAffinityPreset:
    type: ""
    extraMatchLabels:
      security: "drycc-security"
  podAntiAffinityPreset:
    type: "soft"
    extraMatchLabels:
      app: "drycc-storage-mainnode"
  # persistence config
  persistence:
    enabled: false
    size: 5Gi
    storageClass: ""

# metanode: seaweedfs filer & tikv
metanode:
  replicas: 3
  nodeAffinityPreset:
    key: "drycc.cc/node"
    type: "soft"
    values:
    - "true"
  podAffinityPreset:
    type: ""
    extraMatchLabels:
      security: "drycc-security"
  podAntiAffinityPreset:
    type: "soft"
    extraMatchLabels:
      app: "drycc-storage-metanode"
  # persistence config
  persistence:
    enabled: false
    size: 5Gi
    storageClass: ""

# datanode: seaweedfs volume
datanode:
  replicas: 3
  nodeAffinityPreset:
    key: "drycc.cc/node"
    type: "soft"
    values:
    - "true"
  podAffinityPreset:
    type: ""
    extraMatchLabels:
      security: "drycc-security"
  podAntiAffinityPreset:
    type: "soft"
    extraMatchLabels:
      app: "drycc-storage-datanode"
  # persistence config
  persistence:
    enabled: false
    size: 5Gi
    storageClass: ""

# Service
service:
  # Provide any additional service annotations
  annotations: {}

global:
  # Please check `kubernetes.io/ingress.class`
  # The cert-manager component must be installed
  # If you want to use HTTPSEnforced or allowlist functions, you must specify:
  # - nginx
  # - traefik
  # Only the above options have been supported so far
  clusterDomain: "cluster.local"
  # Set the location of Workflow's Object Storage
  #
  # Valid values are:
  # - on-cluster: Run drycc storage within the Kubernetes cluster
  # - off-cluster: Run Storage outside the Kubernetes cluster (Compatible with s3 API)
  storageLocation: on-cluster
