imageOrg: "drycc"
imagePullPolicy: "Always"
imageTag: "canary"
imageRegistry: "registry.drycc.cc"

# drycc storage csi driver
csi:
  driverName: storage.drycc.cc
  dataLocality: "none"
  storageClassName: drycc-storage
  daemonset:
    registrarImage: registry.drycc.cc/k8s/sig-storage/csi-node-driver-registrar:v2.9.0
  statefulset:
    replicas: 1
    nodeAffinityPreset:
      key: "drycc.cc/node"
      type: "soft"
      values:
      - "true"
    podAffinityPreset:
      type: ""
      extraMatchLabels:
        security: "drycc-security"
    podAntiAffinityPreset:
      type: "soft"
      extraMatchLabels:
        app: "drycc-storage-csi-controller"
    resizerImage: registry.drycc.cc/k8s/sig-storage/csi-resizer:v1.9.0
    attacherImage: registry.drycc.cc/k8s/sig-storage/csi-attacher:v4.4.0
    provisionerImage: registry.drycc.cc/k8s/sig-storage/csi-provisioner:v3.6.0
    livenessProbeImage: registry.drycc.cc/k8s/sig-storage/livenessprobe:v2.11.0
  volumes:
    pluginsDir: /var/lib/kubelet/plugins
    podsMountDir: /var/lib/kubelet/pods
    registrationDir: /var/lib/kubelet/plugins_registry

# mainnode seaweedfs master & tipd
mainnode:
  cron:
    scripts: |
      lock
      ec.encode -fullPercent=95 -quietFor=1h
      ec.rebuild -force
      ec.balance -force
      volume.deleteEmpty -quietFor=24h -force
      volume.balance -force
      volume.fix.replication
      s3.clean.uploads -timeAgo=24h
      unlock
    timeZone: "Etc/UTC"
    schedule: "0 */1 * * *"
    concurrencyPolicy: "Replace"
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1
  tipd:
    replicas: 3
    nodeAffinityPreset:
      key: "drycc.cc/node"
      type: "soft"
      values:
      - "true"
    podAffinityPreset:
      type: ""
      extraMatchLabels:
        security: "drycc-security"
    podAntiAffinityPreset:
      type: "soft"
      extraMatchLabels:
        app: "drycc-storage-mainnode-tipd"
    # persistence config
    persistence:
      enabled: false
      size: 5Gi
      storageClass: ""
  weed:
    replicas: 3
    # threshold to vacuum and reclaim spaces
    garbageThreshold: 0.3
    # Storage replication type is XYZ:
    # X number of replica in other data centers
    # Y number of replica in other racks in the same data center
    # Z number of replica in other servers in the same rack
    defaultReplication: "001"
    nodeAffinityPreset:
      key: "drycc.cc/node"
      type: "soft"
      values:
      - "true"
    podAffinityPreset:
      type: ""
      extraMatchLabels:
        security: "drycc-security"
    podAntiAffinityPreset:
      type: "soft"
      extraMatchLabels:
        app: "drycc-storage-mainnode-weed"
    # persistence config
    persistence:
      enabled: false
      size: 5Gi
      storageClass: ""

# metanode: seaweedfs filer & tikv
metanode:
  tikv:
    replicas: 3
    nodeAffinityPreset:
      key: "drycc.cc/node"
      type: "soft"
      values:
      - "true"
    podAffinityPreset:
      type: ""
      extraMatchLabels:
        security: "drycc-security"
    podAntiAffinityPreset:
      type: "soft"
      extraMatchLabels:
        app: "drycc-storage-metanode-tikv"
    # persistence config
    persistence:
      enabled: false
      size: 5Gi
      storageClass: ""
  weed:
    replicas: 3
    nodeAffinityPreset:
      key: "drycc.cc/node"
      type: "soft"
      values:
      - "true"
    podAffinityPreset:
      type: ""
      extraMatchLabels:
        security: "drycc-security"
    podAntiAffinityPreset:
      type: "soft"
      extraMatchLabels:
        app: "drycc-storage-metanode-weed"
    # persistence config
    persistence:
      enabled: false
      size: 5Gi
      storageClass: ""

# datanode: seaweedfs volume
datanode:
  weed:
    replicas: 4
    nodeAffinityPreset:
      key: "drycc.cc/node"
      type: "soft"
      values:
      - "true"
    podAffinityPreset:
      type: ""
      extraMatchLabels:
        security: "drycc-security"
    podAntiAffinityPreset:
      type: "soft"
      extraMatchLabels:
        app: "drycc-storage-datanode-weed"
    # persistence config
    persistence:
      enabled: false
      size: 5Gi
      storageClass: ""
    compactionMBps: 100

# Service
service:
  # Provide any additional service annotations
  annotations: {}

global:
  # A domain name consists of one or more parts.
  # Periods (.) are used to separate these parts.
  # Each part must be 1 to 63 characters in length and can contain lowercase letters, digits, and hyphens (-).
  # It must start and end with a lowercase letter or digit.
  clusterDomain: "cluster.local"
  # Set the location of Workflow's Object Storage
  #
  # Valid values are:
  # - on-cluster: Run drycc storage within the Kubernetes cluster
  # - off-cluster: Run Storage outside the Kubernetes cluster (Compatible with s3 API)
  storageLocation: on-cluster
